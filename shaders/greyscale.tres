[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://c7u0m8b6rn4o7"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_1a4xe"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_wf0d6"]
source = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_168g8"]
input_name = "screen_uv"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D screen_tex_frg_3 : hint_screen_texture;



void fragment() {
// Input:4
	vec2 n_out4p0 = SCREEN_UV;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(screen_tex_frg_3, n_out4p0);


	vec3 n_out2p0;
// ColorFunc:2
	{
		vec3 c = vec3(n_out3p0.xyz);
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out2p0 = vec3(max2, max2, max2);
	}


// Output:0
	COLOR.rgb = n_out2p0;


}
"
graph_offset = Vector2(-440.694, -283.69)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(320, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorFunc_1a4xe")
nodes/fragment/2/position = Vector2(60, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_wf0d6")
nodes/fragment/3/position = Vector2(-180, 120)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_168g8")
nodes/fragment/4/position = Vector2(-580, 140)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 2, 0, 4, 0, 3, 0)
